language: go

os:
  - linux
  - osx
# You don't need to test on very old versions of the Go compiler. It's the user's
# responsibility to keep their compiler up to date.
go:
  - 1.15.x
  - 1.16.x

# Only clone the most recent commit.
git:
  depth: 1

# Don't email me the results of the test runs.
notifications:
  email: false

# script always runs to completion (set +e). If we have linter issues AND a
# failing test, we want to see both. Configure golangci-lint with a
# .golangci.yml file at the top level of your repo.
script:
  - go clean
  - go build
  - go get -u golang.org/x/tools/cmd/benchcmp
  - go test -race -coverprofile=coverage.txt -covermode=atomic `go list ./... | grep -v aws`  # Run all the tests with the race detector enabled
  - go test -bench=. -benchmem -benchtime=5s `go list ./... | grep -v aws` > bench_new.txt # Run all the benchmark for 5s and print memory information
  - benchcmp bench_old.txt new.txt